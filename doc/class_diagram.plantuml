@startuml
enum ChessColour {
    BLACK
    WHITE
}
enum SquareType {
    K
    Q
    B
    K
    P
    X
}
class Square {
    +SquareType Type
    +ChessColour Colour
}
Square --> SquareType : uses
Square --> ChessColour : uses
class Board {
    -Square[8][8] squares
    -bool isLegalMove( Move )
    +Board( void )
    +bool PerformMove( Move )
    +vector<Move> GetMoves( ChessColour )
}
class Move {
    +pair<char,int> from
    +pair<char,int> to
}
Board --> Move : uses
Board --> Square : contains
Board --> ChessColour : uses
class GameState {
    -Board board
    -ChessColour turn_colour
    -vector<Move> move_list
    +GameState( void )
    +void Play( Move )
    +void PrintBoard( void )
    +ChessColour GetColour( void )
    +vector<Move> GetMoveList ( void )
}
GameState --> Board : uses
GameState --> ChessColour : uses
GameState --> Move : uses
@enduml
