@startuml
enum ChessColour {
    Black
    White
}
enum PieceType {
    King
    Queen
    Bishop
    Knight
    Rook
    Pawn
}
class Piece {
    +PieceType Type
    +ChessColour Colour
}
Piece --> PieceType
Piece --> ChessColour
class Move {
    +pair<char,int> from
    +pair<char,int> to
}
class Board {
    -vector<Piece> white_pieces
    -vector<Piece> black_pieces
    -map<Piece&, pair<char, int>> piece_map
    +Board( void )
    +bool PerformMove( Move )
    +vector<Move> GetMoves( ChessColour )
}
Board --> Move
Board --> ChessColour
Board --> Piece
class GameState {
    -Board board
    -ChessColour turn_colour
    -vector<Move> move_list
    +GameState( void )
    +void Play( Move )
    +void PrintBoard( void )
    +ChessColour GetColour( void )
    +vector<Move> GetMoveList ( void )
}
GameState --> Board
GameState --> ChessColour
GameState --> Move
@enduml
